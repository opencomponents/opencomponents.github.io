"use strict";(self.webpackChunkoc_website=self.webpackChunkoc_website||[]).push([[4823],{6484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"consumers/batch-endpoint","title":"Batch endpoint","description":"It allows to retrieve a set of components with a single request to the API. While this should be convenient during the server-side rendering, it is not a good practice for client-side rendering.","source":"@site/docs/consumers/batch-endpoint.md","sourceDirName":"consumers","slug":"/consumers/batch-endpoint","permalink":"/docs/consumers/batch-endpoint","draft":false,"unlisted":false,"editUrl":"https://github.com/opencomponents/opencomponents.github.io/tree/master/website/docs/consumers/batch-endpoint.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Server-side rendering","permalink":"/docs/consumers/server-side-rendering"},"next":{"title":"Publishing to a registry","permalink":"/docs/components/publishing-to-a-registry"}}');var s=t(4848),o=t(8453);const i={sidebar_position:3},a="Batch endpoint",c={},d=[{value:"Server-side rendering via rest API using the post route",id:"server-side-rendering-via-rest-api-using-the-post-route",level:2},{value:"Payload API",id:"payload-api",level:2},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"When to Use Batch vs Individual Requests",id:"when-to-use-batch-vs-individual-requests",level:3},{value:"Optimal Batch Size",id:"optimal-batch-size",level:3},{value:"Caching Strategies",id:"caching-strategies",level:3},{value:"Error Handling for Batch Operations",id:"error-handling-for-batch-operations",level:2},{value:"Partial Failure Handling",id:"partial-failure-handling",level:3},{value:"Retry Logic",id:"retry-logic",level:3},{value:"Real-World Examples",id:"real-world-examples",level:2},{value:"E-commerce Page",id:"e-commerce-page",level:3},{value:"Dashboard Layout",id:"dashboard-layout",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"batch-endpoint",children:"Batch endpoint"})}),"\n",(0,s.jsx)(n.p,{children:"It allows to retrieve a set of components with a single request to the API. While this should be convenient during the server-side rendering, it is not a good practice for client-side rendering."}),"\n",(0,s.jsx)(n.h2,{id:"server-side-rendering-via-rest-api-using-the-post-route",children:"Server-side rendering via rest API using the post route"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl http://my-components-registry.mydomain.com/\n  -X POST\n  -H "Content-Type: application/json"\n  -d \'{components:[{"name": hello-world", "version": "1.X.X"}, {"name": "my-component", "parameters": { "something": 2345 }}]}\'\n\n[{\n  "status": 200,\n  "response": {\n    "href": "https://my-components-registry.mydomain.com/hello-world/1.X.X",\n    "name": "hello-world",\n    "version": "1.0.0",\n    "requestVersion": "1.X.X",\n    "html": "Hello John doe!",\n    "type": "oc-component",\n    "renderMode": "rendered"\n  }\n},{\n  "status": 200,\n  "response": {\n    "href": "https://my-components-registry.mydomain.com/my-component/?something=2345",\n    "name": "my-component",\n    "version": "1.0.0",\n    "requestVersion": "",\n    "html": "Bla bla",\n    "type": "oc-component",\n    "renderMode": "rendered"\n  }\n}]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"payload-api",children:"Payload API"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Mandatory"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"components"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"array of objects"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"yes"})}),(0,s.jsx)(n.td,{children:"Components to retrieve"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"components[index].name"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"yes"})}),(0,s.jsx)(n.td,{children:"Component name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"components[index].version"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"no"})}),(0,s.jsx)(n.td,{children:"Default latest, the component's version"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"components[index].parameters"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"no"})}),(0,s.jsx)(n.td,{children:"Component's parameters"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"omitHref"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"no"})}),(0,s.jsxs)(n.td,{children:["Default false, when ",(0,s.jsx)(n.code,{children:"true"})," omits the href value in the response of each component"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"parameters"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"object"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"no"})}),(0,s.jsx)(n.td,{children:"Global parameters for all components to retrieve. When component has its own parameters, globals will be overwritten"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"when-to-use-batch-vs-individual-requests",children:"When to Use Batch vs Individual Requests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use Batch Endpoint When:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Rendering multiple components on the same page"}),"\n",(0,s.jsx)(n.li,{children:"Components are needed simultaneously"}),"\n",(0,s.jsx)(n.li,{children:"Network latency is a concern"}),"\n",(0,s.jsx)(n.li,{children:"You want to reduce HTTP overhead"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use Individual Requests When:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Loading components asynchronously"}),"\n",(0,s.jsx)(n.li,{children:"Implementing lazy loading"}),"\n",(0,s.jsx)(n.li,{children:"Components have different caching requirements"}),"\n",(0,s.jsx)(n.li,{children:"You need fine-grained error handling"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optimal-batch-size",children:"Optimal Batch Size"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Recommended: 5-10 components per batch\nconst componentBatches = chunkArray(allComponents, 8);\n\nfor (const batch of componentBatches) {\n  const results = await fetchBatch(batch);\n  renderComponents(results);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Cache batch responses by component combination\nconst cacheKey = components.map(c => `${c.name}:${c.version}`).join(',');\n\nif (cache.has(cacheKey)) {\n  return cache.get(cacheKey);\n}\n\nconst result = await fetchBatch(components);\ncache.set(cacheKey, result, { ttl: 300 }); // 5 minutes\nreturn result;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling-for-batch-operations",children:"Error Handling for Batch Operations"}),"\n",(0,s.jsx)(n.h3,{id:"partial-failure-handling",children:"Partial Failure Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function renderBatchWithFallbacks(components) {\n  try {\n    const results = await fetchBatch(components);\n    \n    return results.map((result, index) => {\n      if (result.status !== 200) {\n        console.warn(`Component ${components[index].name} failed:`, result);\n        return {\n          status: 200,\n          response: {\n            html: getFallbackContent(components[index].name),\n            name: components[index].name\n          }\n        };\n      }\n      return result;\n    });\n  } catch (error) {\n    console.error('Batch request failed:', error);\n    return components.map(comp => ({\n      status: 500,\n      response: { html: getFallbackContent(comp.name), name: comp.name }\n    }));\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"retry-logic",children:"Retry Logic"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function fetchBatchWithRetry(components, maxRetries = 3) {\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      return await fetchBatch(components);\n    } catch (error) {\n      if (attempt === maxRetries) throw error;\n      \n      const delay = Math.pow(2, attempt) * 1000; // Exponential backoff\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"real-world-examples",children:"Real-World Examples"}),"\n",(0,s.jsx)(n.h3,{id:"e-commerce-page",children:"E-commerce Page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Fetch all components for a product page\nconst productPageComponents = await fetchBatch([\n  { name: 'header', parameters: { user: currentUser } },\n  { name: 'product-details', parameters: { productId: '123' } },\n  { name: 'recommendations', parameters: { userId: currentUser.id } },\n  { name: 'reviews', parameters: { productId: '123', limit: 5 } },\n  { name: 'footer' }\n]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dashboard-layout",children:"Dashboard Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Load dashboard widgets in batches\nconst dashboardWidgets = await fetchBatch([\n  { name: 'analytics-widget', parameters: { timeframe: 'week' } },\n  { name: 'sales-widget', parameters: { region: 'US' } },\n  { name: 'inventory-widget' },\n  { name: 'notifications-widget', parameters: { userId: user.id } }\n]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const startTime = Date.now();\n\nconst components = await fetchBatch(componentList);\n\nconst endTime = Date.now();\nconsole.log(`Batch request completed in ${endTime - startTime}ms`);\n\n// Log individual component performance\ncomponents.forEach((comp, index) => {\n  if (comp.status !== 200) {\n    console.error(`Component ${componentList[index].name} failed`);\n  }\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);