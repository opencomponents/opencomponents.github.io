var oc=oc||{};oc.components=oc.components||{},oc.components.f235bcc9a02f3b3094e8129ca9724291df813f25={compiler:[7,">= 4.0.0"],main:function(t,e,n,a,o){var s,i=null!=e?e:{},l=n.helperMissing,r="function",c=t.escapeExpression;return'<link rel="stylesheet" href="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'css/styles.css">\n\n<div id="hero">\n  <header>\n    <h1>OpenComponents</h1>\n    <h2>Painless micro frontends delivery</h2>\n    <nav>\n      <a class="button" href="https://github.com/opentable/oc" target="_blank">GitHub</a>\n      <a class="button" href="https://github.com/opentable/oc/wiki" target="_blank">Documentation</a>\n      <a class="button" href="https://gitter.im/opentable/oc" target="_blank">Ask the team</a>\n    </nav>\n  </header>\n  <img class="logo" src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/opencomponents-logo.png" />\n</div>\n\n<section id="content">\n  <article>\n    <header>\n      <h1>Building web applications together, faster.</h1>\n    </header>\n    <p>While microservice architectures allowed teams to scale delivery of independently deployable services, most frontend layers are still run as monolithic applications. Similar to server-side applications, frontend layers often grow into large monoliths that are difficult to maintain and evolve.</p>\n    <p>The idea behind <a href="https://www.thoughtworks.com/radar/techniques/micro-frontends" target="_blank">micro frontends</a> is to enable multiple teams to work seamlessy together by fostering end-to-end ownership of independently developed, tested and deployed features.</p>\n    <p>Think about UI as the composition of features which are maintained by independent teams. These teams could be cross-functional allowing them to develop such features end-to-end, from a database to user interface and independently deploy them.</p>\n  </article>\n\n  <div class="hr">\n    <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/cube-small.png" />\n  </div>\n\n  <article>\n    <header>\n      <h1>The OpenComponents framework</h1>\n    </header>\n    <p>OpenComponents is an open-source, "batteries included" micro frontends framework. Born at OpenTable in 2014, it matured over the years into a battle tested solution currently used to deliver micro frontends at scale by fast growing companies around the world.</p>\n    <div class="block">\n      <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/components.png" />\n      <div>\n        <h2>Components</h2>\n        <p>Small, immutable, units of universal code mainly consisting of html, javascript and css. They can optionally contain some logic, allowing a server-side node.js application to compose a model that is used to render the view. After rendering they are pieces of pure html to be injected into any html page. <a href="https://github.com/opentable/oc/wiki#components-management" target="_blank">Learn more</a></p>\n      </div>\n    </div>\n    <div class="block img-right">\n      <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/template-system.png" />\n      <div>\n        <h2>Template system</h2>\n        <p>OC is unopinionated about components and their underlying client-side JavaScript stack. The template system allows for support of any client-side technology, hiding away all the configuration complexity while avoiding specific UI framework lock-in. <a href="https://github.com/opentable/oc/wiki/The-template-system" target="_blank">Learn more</a></p>\n      </div>\n    </div>\n    <div class="block">\n      <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/registry.png" />\n      <div>\n        <h2>Registry</h2>\n        <p>The registry provides a rest API to consume, retrieve, and publish components to a library. When components depend on static resources (such as images, css files, etc.) these are stored, during packaging and publishing, in a publicly-exposed part of the library that serves as a CDN. <a href="https://github.com/opentable/oc/wiki/Registry" target="_blank">Learn more</a></p>\n      </div>\n    </div>\n    <div class="block img-right">\n      <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/cli.png" />\n      <div>\n        <h2>CLI</h2>\n        <p>The CLI tool allows developers to create, develop, and test components locally. It also allows publishing of components to your registry. <a href="https://github.com/opentable/oc/wiki/Cli" target="_blank">Learn more</a></p>\n      </div>\n    </div>\n     <div class="block">\n      <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/clients.png" />\n      <div>\n        <h2>Client libraries</h2>\n        <p>Multiple libraries are available, allowing clients to consume components on different environments and platforms. Depending on the library, clients are normally able to consume both unrendered components and rendered components. <a href="https://github.com/opencomponents/oc-client-node#oc-client" target="_blank">Learn more</a></p>\n      </div>\n    </div>\n  </article>\n\n  <div class="hr">\n    <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/cube-small.png" />\n  </div>\n\n  <article>\n    <header>\n      <h1>Get started with OpenComponents</h1>\n    </header>\n    <p>Before starting make sure you have:<br />\n      <ul>\n        <li>An account on <a href="https://signup.heroku.com/" target="_blank">Heroku</a></li>\n        <li>An <a href="https://aws.amazon.com/s3" target="_blank">S3</a> bucket on AWS</li>\n      </ul>\n    </p>\n    <h3>#1 - Deploy the registry to Heroku</h3>\n    <p>\n       <a class="button secondary" href="https://heroku.com/deploy?template=https://github.com/opencomponents/starter-kit" target="_blank">Click to deploy to Heroku</a> - deploy your OpenComponents registry\n    </p>\n    <h3>#2 - Build your first component</h3>\n    <p>Install the OpenComponents CLI</p>\n    <pre>$ npm install -g oc</pre>\n    <p>Create your first component</p>\n    <pre>$ oc init my-first-component</pre>\n    <p>Develop/test locally by starting a local dev registry</p>\n    <pre>$ oc dev . 3030</pre>\n    <p>Your component will be available at:</p>\n      <ul>\n        <li>endpoint: <a href="http://localhost:3030/my-first-component" target="_blank">http://localhost:3030/my-first-component</a></li>\n        <li>info: <a href="http://localhost:3030/my-first-component/~info" target="_blank">http://localhost:3030/my-first-component/~info</a></li>\n        <li>preview: <a href="http://localhost:3030/my-first-component/~preview" target="_blank">http://localhost:3030/my-first-component/~preview</a></li>\n      </ul>\n    <h3>#3 Publish the component to the registry</h3>\n    <p>Add the registry using the CLI</p>\n    <pre>$ oc registry add http://my-registry.on.herokuapp.com/</pre>\n    <p>Publish your component</p>\n    <pre>$ oc publish my-first-component --username=YOURVALUEHERE --password=YOURVALUEHERE</pre>\n    <p>Your component is now published: <a href="http://my-registry.on.herokuapp.com/my-first-component" target="_blank">http://my-registry.on.herokuapp.com/my-first-component</a></p>\n  </article>\n\n  <div class="hr">\n    <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/cube-small.png" />\n  </div>\n\n  <article>\n    <header>\n      <h1>Who\'s using OC?</h1>\n    </header>\n    <p>OC is used by fast growing companies around the world to serve microfrontends at scale</p>\n    <div class="logos">\n      <a href="https://www.opentable.com">\n        <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/logos/opentable.png" alt="OpenTable">\n      </a>\n      <a href="https://www.skyscanner.net">\n        <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/logos/skyscanner.png" alt="Skyscanner">\n      </a>\n      <a href="https://www.chegg.com">\n        <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/logos/chegg.png" alt="Chegg">\n      </a>\n      <a href="https://oneadvanced.com">\n        <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/logos/advanced.png" alt="Advanced">\n      </a>\n      <a href="https://alvarium.io">\n        <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/logos/alvarium.png" alt="Alvarium">\n      </a>\n    </div>\n  </article>\n\n\n</section>\n\n<div class="hr footer">\n  <img src="'+c((s=null!=(s=n.staticPath||(null!=e?e.staticPath:e))?s:l,typeof s===r?s.call(i,{name:"staticPath",hash:{},data:o}):s))+'img/cube-small.png" />\n</div>\n\n<script>\n  ((window.gitter = {}).chat = {}).options = {\n    room: \'opentable/oc\'\n  };\n</script>\n<script src="https://sidecar.gitter.im/dist/sidecar.v1.js" async defer></script>'},useData:!0};